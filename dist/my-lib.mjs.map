{"version":3,"file":"my-lib.mjs","sources":["../src/core/field_decorators.ts","../src/core/events.ts","../src/core/storage.ts","../src/core/components.ts","../src/core/html_manipulation.ts","../src/core/attributes.ts"],"sourcesContent":["\nexport interface PropagationConfig {\n    selector: string,\n    fieldType?: 'property' | 'attribute';\n    inputName: string\n}\n\nexport function PropagateToChild(param: PropagationConfig) {\n    //TODO can be generic as we repeat it a lot\n    return function (target: any, propertyKey: string) {\n\n        if (!target['property_to_propagate']) {\n            target['property_to_propagate'] = new Map<string, PropagationConfig>();\n        }\n        // console.log({param})\n        target['property_to_propagate'].set(`${propertyKey}`, param);\n    };\n}\n\n\n\n// TODO Storage\n// De forma reactiva cunado un valor ahi cambie llamar el metodo asi peudo hacer esas alocaciones\n//o cambios modificando el storage directamente, pero tendria q usar un metodo para esto,\n//seria storage y es local storage wrapper?\n\n\n","// EventPattern its a string representing a [cssSelector]:event\nexport type EventPattern = string;\n\nexport type EventMap = { [key: EventPattern]: Function };\n\nexport interface ElementWithEventsStack {\n    callback_bind_stack: EventMap;\n}\n\nconst eventMapName = 'callback_bind_stack';\ntype HTMLElementWithEventStack = HTMLElement & ElementWithEventsStack;\n\nfunction isHTMLElementWithEventStack(element: HTMLElement | HTMLElementWithEventStack): boolean {\n    return eventMapName in (element as ElementWithEventsStack);\n}\n\n// EventBind Decorator attach the\nexport function EventBind(values: string) {\n    return function (target: HTMLElement, propertyKey: string, descriptor: PropertyDescriptor) {\n        if (!isHTMLElementWithEventStack(target)) {\n            target[eventMapName] = {};\n        }\n        const method = target[propertyKey];\n        (target as HTMLElementWithEventStack).callback_bind_stack [`${values}`] = method\n    };\n}\n\nexport function attemptBindEvents(element: HTMLElement) {\n    if (isHTMLElementWithEventStack(element)) {\n        bindEvents(element as HTMLElementWithEventStack);\n    }\n}\n\nexport function bindEvents(target: HTMLElementWithEventStack) {\n\n    Object.keys(target.callback_bind_stack).forEach((key: string) => {\n\n        const sections = key.split(\":\");\n        const method = target.callback_bind_stack[key];\n\n        if (sections[0].startsWith(\"window\")) {\n            const event = sections[1];\n            window.addEventListener(event, method.bind(target))\n        } else {\n            const element = target.shadowRoot.querySelector(sections[0]);\n\n            if (element) {\n                element.addEventListener(sections[1], method.bind(target));\n            }\n\n        }\n    })\n}\n\n","import {isJSON} from \"./components\";\n\n\nconst storageKeyMapName = \"storage_keys\";\n\n/*\n* FromStorage get the current value from the local storage and will also call the method\n* registered each time the values change\n* */\nexport function FromStorage(name: string) {\n    //TODO can be generic as we repeat it a lot\n    return function (target: any, propertyKey: string) {\n        if (!target[storageKeyMapName]) {\n            target[storageKeyMapName] = new Map<string, any>();\n        }\n\n        //\n        const method = target[propertyKey];\n\n        target[storageKeyMapName].set(name, method);\n    };\n\n}\n\n\nexport function subscribeToKeyChange(key: string, handler: any): void {\n    window.addEventListener(`storage-change:${key}`, (ev: any) => {\n        handler(ev.detail.data)\n    })\n}\n\nexport function changeStorageValue(key: string, value: any): void {\n    //TODO add reasibng why is necesary to trigger new event\n    const changeEvent = new CustomEvent(`storage-change:${key}`, {detail: {data: value}});\n    //Try catch\n    localStorage.setItem(key, JSON.stringify(value));\n    window.dispatchEvent(changeEvent);\n}\n\nexport function syncWithStorage(target) {\n    if (target[storageKeyMapName]) {\n        for (const [storageKey, method] of target[storageKeyMapName]) {\n            // ise this instead of the other one\n            subscribeToKeyChange(storageKey, method.bind(target));\n            const currentValue = localStorage.getItem(storageKey);\n            invoque(method.bind(target), currentValue);\n\n        }\n    }\n}\n\nfunction invoque(method: Function, value: any) {\n    if (value) {\n        //TODO return the onject parsed on isJSON to avoid twice serialization\n        if (isJSON(value)) {\n            method(JSON.parse(value))\n        } else {\n            method(value)\n        }\n\n    }\n}\n","import {attemptBindEvents} from \"./events\";\nimport {syncWithStorage} from \"./storage\";\n\ninterface CustomElementConfig {\n    selector: string;\n    template: string;\n    style?: string;\n}\n\nconst validateSelector = (selector: string) => {\n    if (selector.indexOf('-') <= 0) {\n        throw new Error('You need at least 1 dash in the custom element name!');\n    }\n};\n\n\nfunction insertTemplate(attr: CustomElementConfig) {\n    //TODO casted may no be required\n    const casted = (this as unknown as HTMLElement)\n    const shadowRoot = casted.attachShadow({mode: 'open'});\n    const template = document.createElement(\"template\");\n\n    template.innerHTML = attr.style ? `<style>${attr.style}</style>${attr.template}` : attr.template;\n    shadowRoot.appendChild(template.content.cloneNode(true));\n    return casted;\n}\n\nexport function WebComponent(attr: CustomElementConfig) {\n    return function _WebComponent<T extends { new(...args: any[]): {} }>(constr: T) {\n\n        validateSelector(attr.selector)\n\n        let component = class extends constr {\n            casted: any;\n\n            constructor(...args: any[]) {\n                super(...args)\n                this.casted = insertTemplate.call(this, attr);\n                // we init the listeners\n                attemptBindEvents((this as unknown as HTMLElement));\n\n                syncWithStorage(this);\n\n            }\n\n            attributeChangedCallback(name, oldValue, newValue) {\n                // if you didn't use the notation wont have this field set.\n                if ((this as any).attribute_list) {\n                    const handler = (this as any).attribute_list.get(name);\n                    if (handler) {\n                        if (typeof newValue === 'string' && isJSON(newValue)) {\n                            return handler.apply(this, [JSON.parse(newValue)])\n                        }\n                        handler.apply(this, [newValue])\n                    }\n                }\n            }\n\n        }\n\n\n        window.customElements.define(attr.selector, component as any);\n        return component;\n    }\n}\n\n\nexport function isJSON(str) {\n    try {\n        JSON.stringify(JSON.parse(str));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n","\n\n// findNodeOnTree traverse the element tree to find the Node with the given seelctor\n// otherwise will return null\nexport function findNodeOnUpTree(selector: string, element: Node): Node | null {\n    let queryResult: Node = (element as HTMLElement).querySelector(selector);\n    if (!queryResult && element.parentNode !== null) {\n        queryResult = findNodeOnUpTree(selector, element.parentNode)\n    }\n    return queryResult;\n}\n","const AttributeMapKey = 'attribute_list';\n\n/*\n* Attribute attach a method call to an attribute change\n* */\nexport function Attribute(name: string) {\n    //TODO can be generic as we repeat it a lot\n    return function (target: any, propertyKey: string) {\n        if (!target[AttributeMapKey]) {\n            target[AttributeMapKey] = new Map<string, any>();\n        }\n\n        //\n        const method = target[propertyKey];\n\n        target[AttributeMapKey].set(name, method);\n    };\n}\n"],"names":[],"mappings":"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"}